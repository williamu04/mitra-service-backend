// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = "file:../db.dev"
}

model User {
  id        String   @id @default(cuid())
  email     String?  @unique
  repairRequests RepairRequest[]
  notifications Notification[]
}

enum RepairStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

model RepairRequest {
  id            String   @id @default(cuid())
  device        String
  problem       String
  status        RepairStatus @default(PENDING)
  estimatedCost Float
  estimatedTime DateTime
  warranty      Boolean
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  userId        String
  user        User     @relation(fields: [userId], references: [id])
  pickupRequest PickupRequest[]
  payment      Payment[]
}

enum PickupStatus {
  SCHEDULED
  ON_THE_WAY
  COMPLETED
  CANCELLED
}

model PickupRequest {
  id            String   @id @default(cuid())
  address       String
  pickupTime    DateTime
  status        PickupStatus @default(SCHEDULED)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  repairRequestId String
  repairRequest RepairRequest @relation(fields: [repairRequestId], references: [id])
}

model Notification {
  id        String   @id @default(cuid())
  message   String
  isRead    Boolean  @default(false)
  createdAt DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
}

enum PaymentStatus {
  PENDING
  PAID
  FAILED
}

model Payment {
  id            String   @id @default(cuid())
  amount        Float
  method        String
  status        PaymentStatus @default(PENDING)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  repairRequestId String
  repairRequest RepairRequest @relation(fields: [repairRequestId], references: [id])
}